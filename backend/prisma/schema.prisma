// Database Schema for Saraya QR Menu System
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User Model for Admin Authentication
model User {
  id              String   @id @default(cuid())
  email           String   @unique
  password        String
  firstName       String
  lastName        String
  role            UserRole @default(ADMIN)
  isActive        Boolean  @default(true)
  lastLogin       DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Audit fields
  createdCategories Category[] @relation("CategoryCreatedBy")
  updatedCategories Category[] @relation("CategoryUpdatedBy")
  createdProducts   Product[]  @relation("ProductCreatedBy")
  updatedProducts   Product[]  @relation("ProductUpdatedBy")

  @@map("users")
  @@index([email])
}

// Category Model for Drink Types
model Category {
  id              String   @id @default(cuid())
  nameEn          String   // English name
  nameAr          String   // Arabic name
  descriptionEn   String?  // English description
  descriptionAr   String?  // Arabic description
  imageUrl        String?
  isActive        Boolean  @default(true)
  sortOrder       Int      @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relationships
  products        Product[]

  // Audit relationships
  createdBy       User     @relation("CategoryCreatedBy", fields: [createdById], references: [id])
  createdById     String
  updatedBy       User?    @relation("CategoryUpdatedBy", fields: [updatedById], references: [id])
  updatedById     String?

  @@map("categories")
  @@index([nameEn])
  @@index([nameAr])
  @@index([isActive])
  @@index([sortOrder])
}

// Product Model for Individual Drinks
model Product {
  id              String        @id @default(cuid())
  nameEn          String        // English name
  nameAr          String        // Arabic name
  descriptionEn   String?       // English description
  descriptionAr   String?       // Arabic description
  basePrice       Decimal       @db.Decimal(10, 2)
  imageUrl        String?
  isActive        Boolean       @default(true)
  isFeatured      Boolean       @default(false)
  sortOrder       Int           @default(0)
  preparationTime String?       // e.g., "5-10 minutes"
  ingredientsEn   String?       // JSON string of English ingredients
  ingredientsAr   String?       // JSON string of Arabic ingredients
  allergens       String?       // JSON string of allergen information
  nutritionInfo   String?       // JSON string of nutrition data
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  // Relationships
  category        Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId      String
  variations      ProductVariation[]

  // Audit relationships
  createdBy       User          @relation("ProductCreatedBy", fields: [createdById], references: [id])
  createdById     String
  updatedBy       User?         @relation("ProductUpdatedBy", fields: [updatedById], references: [id])
  updatedById     String?

  @@map("products")
  @@index([categoryId])
  @@index([nameEn])
  @@index([nameAr])
  @@index([isActive])
  @@index([isFeatured])
  @@index([sortOrder])
}

// Product Variation Model for Sizes, Temperature, etc.
model ProductVariation {
  id              String          @id @default(cuid())
  nameEn          String          // English name e.g., "Small", "Large", "Hot", "Iced"
  nameAr          String          // Arabic name e.g., "صغير", "كبير", "ساخن", "مثلج"
  type            VariationType   // SIZE, TEMPERATURE, EXTRAS
  priceModifier   Decimal         @default(0) @db.Decimal(10, 2)
  isDefault       Boolean         @default(false)
  isActive        Boolean         @default(true)
  sortOrder       Int             @default(0)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  // Relationships
  product         Product         @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId       String

  @@map("product_variations")
  @@index([productId])
  @@index([type])
  @@index([isActive])
  @@index([sortOrder])
}

// Menu Configuration for Restaurant Settings
model MenuConfig {
  id                    String   @id @default(cuid())
  restaurantNameEn      String   @default("Saraya Drinks")
  restaurantNameAr      String   @default("سرايا للمشروبات")
  restaurantDescriptionEn String?
  restaurantDescriptionAr String?
  logoUrl               String?
  primaryColor          String   @default("#723713")
  secondaryColor        String   @default("#b58350")
  menuQrCode            String?  // Generated QR code image URL
  menuUrl               String?  // Public menu URL
  isActive              Boolean  @default(true)
  defaultLanguage       String   @default("ar") // "ar" or "en"
  openingHours          String?  // JSON string of opening hours
  contactInfo           String?  // JSON string of contact details
  socialLinks           String?  // JSON string of social media links
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("menu_config")
}

// Enums
enum UserRole {
  SUPER_ADMIN
  ADMIN
  MANAGER
}

enum VariationType {
  SIZE
  TEMPERATURE
  EXTRAS
  SWEETNESS
  ICE_LEVEL
  MILK_TYPE
}

// Performance indexes for complex queries
// These will be created automatically by Prisma